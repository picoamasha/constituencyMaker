{"ast":null,"code":"var _jsxFileName = \"/Users/vhaldiya/constituencyMaker/src/containers/HomePage/Home.js\";\nimport React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport \"./Home.css\";\nimport axios from \"../../axios-constituency\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.columnsTotal = [{\n      dataField: 'Id',\n      text: 'Id'\n    }, {\n      dataField: 'Total Villages',\n      text: 'Total Villages'\n    }, {\n      dataField: 'Total Population',\n      text: 'Total Population'\n    }, {\n      dataField: 'Total Ao Population',\n      text: 'Total Ao Population'\n    }, {\n      dataField: 'Total Sema Population',\n      text: 'Total Sema Population'\n    }, {\n      dataField: 'Total Teny Population',\n      text: 'Total Teny Population'\n    }, {\n      dataField: 'Total Lotha Population',\n      text: 'Total Lotha Population'\n    }, {\n      dataField: 'Total Others',\n      text: 'Total Other Population'\n    }];\n\n    this.returnNewIDs = (arr, id) => {\n      let newArr = [...arr];\n      const index = newArr.indexOf(id);\n\n      if (index > -1) {\n        newArr.splice(index, 1);\n      }\n\n      return newArr;\n    };\n\n    this.handleOnSelect = (row, isSelect) => {\n      if (isSelect) {\n        this.setState(prevState => ({\n          selectedIds: [...prevState.selectedIds, row[\"Id\"]]\n        }));\n      } else {\n        let newArr = [...this.state.selectedIds];\n        const index = newArr.indexOf(row[\"Id\"]);\n\n        if (index > -1) {\n          newArr.splice(index, 1);\n        }\n\n        this.setState(prevState => ({\n          selectedIds: newArr\n        }));\n      }\n    };\n\n    this.selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      onSelect: this.handleOnSelect,\n      hideSelectAll: true\n    };\n    this.state = {\n      tableData: undefined,\n      selectedIds: [],\n      mapKeyId: {},\n      applicationError: undefined\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://create-constituencies-default-rtdb.firebaseio.com/my.json').then(response => {\n      let tmp = [];\n\n      for (var i in response.data) {\n        tmp.push(response.data[i]);\n      }\n\n      console.log(response.data);\n      this.setState({\n        tableData: tmp\n      });\n    }).catch(error => {\n      this.setState(preState => ({\n        applicationError: true\n      }));\n    });\n  }\n\n  render() {\n    async function updateAPI(url) {\n      const response = await axios.patch(url, {\n        \"isSelected\": \"FALSE\"\n      });\n      console.log(response);\n      console.log(response.data);\n    }\n\n    const deleteData = () => {\n      let arrIds = [...this.state.selectedIds];\n      let villageIds = [];\n      axios.get('https://create-constituencies-default-rtdb.firebaseio.com/my.json').then(response => {\n        for (var i in response.data) {\n          if (arrIds.includes(response.data[i][\"Id\"])) {\n            villageIds = [...villageIds, ...response.data[i][\"Villages Selected\"]];\n          }\n        }\n\n        console.log(villageIds);\n        villageIds.forEach(ele => {\n          let id = parseInt(ele) - 1;\n          var url = \"https://create-constituencies-default-rtdb.firebaseio.com/db/\" + id.toString() + \".json/\";\n          updateAPI(url);\n        });\n      }).catch(error => {\n        this.setState(preState => ({\n          applicationError: true\n        }));\n      });\n    };\n\n    const options = {\n      sizePerPage: 8,\n      hideSizePerPage: true,\n      hidePageListOnlyOnePage: true\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"home-heading\",\n        children: \"Constituencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        pagination: paginationFactory(options),\n        selectRow: this.selectRow,\n        noDataIndication: \"Table is Empty. Please create Constituencies from the create page.\",\n        hover: true,\n        condensed: true,\n        striped: true,\n        keyField: \"Id\",\n        data: this.state.tableData ? this.state.tableData : [],\n        columns: this.columnsTotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          ariant: \"primary\",\n          onClick: () => deleteData(),\n          disabled: this.state.selectedIds.length === 0,\n          children: \"Delete Constituencies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/vhaldiya/constituencyMaker/src/containers/HomePage/Home.js"],"names":["React","Component","BootstrapTable","axios","paginationFactory","Button","Home","constructor","props","columnsTotal","dataField","text","returnNewIDs","arr","id","newArr","index","indexOf","splice","handleOnSelect","row","isSelect","setState","prevState","selectedIds","state","selectRow","mode","clickToSelect","onSelect","hideSelectAll","tableData","undefined","mapKeyId","applicationError","componentDidMount","get","then","response","tmp","i","data","push","console","log","catch","error","preState","render","updateAPI","url","patch","deleteData","arrIds","villageIds","includes","forEach","ele","parseInt","toString","options","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport  \"./Home.css\";\nimport axios from \"../../axios-constituency\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {Button} from \"react-bootstrap\";\nclass Home extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n        tableData: undefined,\n        selectedIds: [],\n        mapKeyId: {},\n        applicationError: undefined\n    }\n}\n\ncomponentDidMount() {\n  axios.get('https://create-constituencies-default-rtdb.firebaseio.com/my.json').then(\n      response => {\n        let tmp = [];\n        for(var i in response.data){\n          tmp.push(response.data[i]);\n        }\n        console.log(response.data);\n          this.setState({\n            tableData: tmp\n          });\n      }\n  ).catch(error => { this.setState((preState) => ({\n    applicationError: true\n  })) });\n}\n\n    columnsTotal = [{\n        dataField: 'Id',\n        text: 'Id',\n      }, {\n        dataField: 'Total Villages',\n        text: 'Total Villages',\n      }, {\n        dataField: 'Total Population',\n        text: 'Total Population',\n      }, {\n        dataField: 'Total Ao Population',\n        text: 'Total Ao Population',\n      },\n      {\n        dataField: 'Total Sema Population',\n        text: 'Total Sema Population',\n      },\n      {\n        dataField: 'Total Teny Population',\n        text: 'Total Teny Population',\n      },\n      {\n        dataField: 'Total Lotha Population',\n        text: 'Total Lotha Population',\n      },\n      {\n        dataField: 'Total Others',\n        text: 'Total Other Population',\n      }];\n\n      returnNewIDs = (arr, id) => {\n        let newArr = [...arr];\n        const index = newArr.indexOf(id);\n        if (index > -1) {\n          newArr.splice(index, 1);\n        }\n        return newArr;\n      }\n\n      handleOnSelect = (row, isSelect) => {\n        if(isSelect){\n          this.setState((prevState) => ({\n            selectedIds: [...prevState.selectedIds, row[\"Id\"]]\n          }));\n        }\n        else{\n          let newArr = [...this.state.selectedIds];\n          const index = newArr.indexOf(row[\"Id\"]);\n          if (index > -1) {\n            newArr.splice(index, 1);\n          }\n          this.setState((prevState) => ({\n            selectedIds: newArr\n          }));\n        }\n      }\n\n      selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        onSelect: this.handleOnSelect,\n        hideSelectAll: true\n      };\n\n    render() {\n\n      async function updateAPI(url) {\n        const response = await axios.patch(url, {\"isSelected\": \"FALSE\"});\n        console.log(response)\n        console.log(response.data)\n      }\n\n      const deleteData = () => {\n        let arrIds = [...this.state.selectedIds];\n        let villageIds = [];\n        axios.get('https://create-constituencies-default-rtdb.firebaseio.com/my.json').then(\n          response => {\n            for(var i in response.data){\n              if(arrIds.includes(response.data[i][\"Id\"])){\n                villageIds = [...villageIds, ...response.data[i][\"Villages Selected\"]]\n              }\n            }\n            console.log(villageIds);\n            villageIds.forEach((ele)=>{\n              let id = parseInt(ele)-1;\n              var url = \"https://create-constituencies-default-rtdb.firebaseio.com/db/\" + id.toString() + \".json/\";\n              updateAPI(url);\n            });\n          }\n      ).catch(error => { this.setState((preState) => ({\n        applicationError: true\n      })) });\n      }\n\n      const options = {\n        sizePerPage: 8,\n        hideSizePerPage: true,\n        hidePageListOnlyOnePage: true\n      };\n\n        return (\n            <div>\n                <h3 className=\"home-heading\">Constituencies</h3>\n                \n                <BootstrapTable\n                      pagination={ paginationFactory(options) }\n                      selectRow={ this.selectRow }\n                      noDataIndication=\"Table is Empty. Please create Constituencies from the create page.\"\n                      hover\n                      condensed\n                      striped\n                      keyField='Id'\n                      data={ this.state.tableData ?this.state.tableData : [] }\n                      columns={ this.columnsTotal }\n                  />\n                  <div className=\"delete-btn\">\n                    <Button ariant=\"primary\" onClick={()=>deleteData()} disabled={this.state.selectedIds.length === 0}>Delete Constituencies</Button>\n                  </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}