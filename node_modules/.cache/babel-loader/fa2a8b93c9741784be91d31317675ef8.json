{"ast":null,"code":"var _jsxFileName = \"/Users/vhaldiya/constituencyMaker/src/containers/Create/Create.js\";\nimport React, { Component } from 'react';\nimport Dimapur from \"../../images/Dimapur.svg\"; // import db from \"../../DataStore/db\";\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport './Create.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Button } from \"react-bootstrap\";\nimport axios from \"../../axios-constituency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isValidSelectionInclusion = row => {\n      let arr = [...this.state.villageIds, row[\"Id\"]];\n      let usedCircles = new Set();\n      let tmp = this.state.dbData.filter(ele => {\n        return arr.includes(ele[\"Id\"]);\n      });\n      tmp.forEach(ele => usedCircles.add(ele[\"Circle\"]));\n      return usedCircles.size <= 3;\n    };\n\n    this.isValidSelectionExclusion = row => {\n      let arr = [...this.state.villageIds];\n      const index = arr.indexOf(row[\"Id\"]);\n\n      if (index > -1) {\n        arr.splice(index, 1);\n      }\n\n      let usedCircles = new Set();\n      let tmp = this.state.dbData.filter(ele => {\n        return arr.includes(ele[\"Id\"]);\n      });\n      tmp.forEach(ele => usedCircles.add(ele[\"Circle\"]));\n      return usedCircles.size <= 3;\n    };\n\n    this.returnNewIDs = (arr, id) => {\n      let newArr = [...arr];\n      const index = newArr.indexOf(id);\n\n      if (index > -1) {\n        newArr.splice(index, 1);\n      }\n\n      return newArr;\n    };\n\n    this.handleOnSelect = (row, isSelect) => {\n      // console.log(row, isSelect);\n      if (isSelect) {\n        if (this.isValidSelectionInclusion(row)) {\n          this.setState(prevState => ({\n            villageIds: [...prevState.villageIds, row[\"Id\"]],\n            totalVillages: prevState.totalVillages + 1,\n            totalPopulation: prevState.totalPopulation + parseInt(row[\"Total population\"]),\n            totalAoPopulation: prevState.totalAoPopulation + parseInt(row[\"Ao population\"]),\n            totalSemaPopulation: prevState.totalSemaPopulation + parseInt(row[\"Sema population\"]),\n            totalTenyPopulation: prevState.totalTenyPopulation + parseInt(row[\"Teny Population\"]),\n            totalLothaPopulation: prevState.totalLothaPopulation + parseInt(row[\"Lotha Population\"]),\n            totalOthers: prevState.totalOthers + parseInt(row[\"Others\"])\n          }));\n        } else {\n          this.setState(prevState => ({\n            error: true\n          }));\n          alert(\"You cannot select villages from more than 3 Circles for a Constituency!!\");\n          return false;\n        }\n      } else {\n        this.setState(prevState => ({\n          villageIds: this.returnNewIDs(prevState.villageIds, row[\"Id\"]),\n          totalVillages: prevState.totalVillages - 1,\n          totalPopulation: prevState.totalPopulation - parseInt(row[\"Total population\"]),\n          totalAoPopulation: prevState.totalAoPopulation - parseInt(row[\"Ao population\"]),\n          totalSemaPopulation: prevState.totalSemaPopulation - parseInt(row[\"Sema population\"]),\n          totalTenyPopulation: prevState.totalTenyPopulation - parseInt(row[\"Teny Population\"]),\n          totalLothaPopulation: prevState.totalLothaPopulation - parseInt(row[\"Lotha Population\"]),\n          totalOthers: prevState.totalOthers - parseInt(row[\"Others\"])\n        }));\n\n        if (this.isValidSelectionExclusion(row)) {\n          this.setState(prevState => ({\n            error: false\n          }));\n        }\n      }\n    };\n\n    this.filterTableData = cirle => {\n      if (this.state.dbData) {\n        const arr = this.state.dbData.filter(ele => {\n          return ele[\"Circle\"] === cirle && ele[\"isSelected\"] === \"FALSE\";\n        });\n        arr.sort((ele1, ele2) => {\n          return ele1[\"Location name\"] > ele2[\"Location name\"] ? 1 : ele1[\"Location name\"] < ele2[\"Location name\"] ? -1 : 0;\n        }); // console.log(arr);\n\n        this.setState({\n          tableData: [...arr],\n          circle: cirle\n        });\n      }\n\n      this.node.paginationContext.currPage = 1;\n    };\n\n    this.columns = [{\n      dataField: 'Location name',\n      text: 'Village Name'\n    }, {\n      dataField: 'Total population',\n      text: 'Total Population'\n    }, {\n      dataField: 'Ao population',\n      text: 'Ao Population'\n    }, {\n      dataField: 'Sema population',\n      text: 'Sema Population'\n    }, {\n      dataField: 'Teny Population',\n      text: 'Teny Population'\n    }, {\n      dataField: 'Lotha Population',\n      text: 'Lotha Population'\n    }, {\n      dataField: 'Others',\n      text: 'Other Population'\n    }];\n    this.columnsTotal = [{\n      dataField: 'Total Villages',\n      text: 'Total Villages'\n    }, {\n      dataField: 'Total Population',\n      text: 'Total Population'\n    }, {\n      dataField: 'Total Ao population',\n      text: 'Total Ao Population'\n    }, {\n      dataField: 'Total Sema population',\n      text: 'Total Sema Population'\n    }, {\n      dataField: 'Total Teny Population',\n      text: 'Total Teny Population'\n    }, {\n      dataField: 'Total Lotha Population',\n      text: 'Total Lotha Population'\n    }, {\n      dataField: 'Total Others',\n      text: 'Total Other Population'\n    }];\n    this.selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      onSelect: this.handleOnSelect,\n      hideSelectAll: true\n    };\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.state = {\n      dbData: undefined,\n      tableData: [],\n      villageIds: [],\n      totalVillages: 0,\n      totalPopulation: 0,\n      totalAoPopulation: 0,\n      totalSemaPopulation: 0,\n      totalTenyPopulation: 0,\n      totalLothaPopulation: 0,\n      totalOthers: 0,\n      error: false,\n      circle: undefined,\n      applicationError: false,\n      totalCreated: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://create-constituencies-default-rtdb.firebaseio.com/db.json').then(response => {\n      console.log(response.data);\n      this.setState({\n        dbData: response.data\n      });\n    }).catch(error => {\n      this.setState(preState => ({\n        applicationError: true\n      }));\n    });\n    axios.get('https://create-constituencies-default-rtdb.firebaseio.com/my.json').then(response => {\n      let tmp = [];\n\n      for (var i in response.data) {\n        tmp.push(response.data[i]);\n      }\n\n      this.setState({\n        totalCreated: tmp.length\n      });\n    }).catch(error => {\n      this.setState(preState => ({\n        applicationError: true\n      }));\n    });\n  }\n\n  componentDidUpdate() {// axios.get('https://create-constituencies-default-rtdb.firebaseio.com/db.json').then(\n    //       response => {\n    //         console.log(response.data);\n    //           this.setState({\n    //             dbData: response.data\n    //           });\n    //       }\n    //   ).catch(error => { this.setState((preState) => ({\n    //     applicationError: true\n    //   })) });\n  }\n\n  render() {\n    const options = {\n      sizePerPage: 7,\n      hideSizePerPage: true,\n      hidePageListOnlyOnePage: true\n    };\n\n    async function updateAPI(url) {\n      const response = await axios.patch(url, {\n        \"isSelected\": \"TRUE\"\n      });\n      console.log(response);\n      console.log(response.data);\n    }\n\n    const create = () => {\n      let obj = {};\n      obj[\"Id\"] = this.state.totalCreated + 1;\n      obj[\"Total Villages\"] = this.state.totalVillages;\n      obj[\"Total Population\"] = this.state.totalPopulation;\n      obj[\"Total Ao Population\"] = this.state.totalAoPopulation;\n      obj[\"Total Sema Population\"] = this.state.totalSemaPopulation;\n      obj[\"Total Teny Population\"] = this.state.totalTenyPopulation;\n      obj[\"Total Lotha Population\"] = this.state.totalLothaPopulation;\n      obj[\"Total Others\"] = this.state.totalOthers;\n      obj[\"Villages Selected\"] = this.state.villageIds; // my.push(obj);\n\n      let selectedVillages = [...this.state.villageIds];\n      this.state.dbData.forEach(ele => {\n        if (selectedVillages.includes(ele[\"Id\"])) {\n          var id = parseInt(ele[\"Id\"]) - 1;\n          var url = \"https://create-constituencies-default-rtdb.firebaseio.com/db/\" + id.toString() + \".json/\";\n          updateAPI(url);\n        }\n      });\n      axios.post('/my.json', obj).then(response => {\n        console.log(\"Created Successfully\");\n        this.nextPath('/home');\n      }).catch(error => {\n        //console.log(error);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n\n    const totalTableData = [{\n      \"Total Villages\": this.state.totalVillages,\n      \"Total Population\": this.state.totalPopulation,\n      \"Total Ao population\": this.state.totalAoPopulation,\n      \"Total Sema population\": this.state.totalSemaPopulation,\n      \"Total Teny Population\": this.state.totalTenyPopulation,\n      \"Total Lotha Population\": this.state.totalLothaPopulation,\n      \"Total Others\": this.state.totalOthers\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-child map\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Dimapur-img\",\n            src: Dimapur,\n            useMap: \"#image-map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"map\", {\n            name: \"image-map\",\n            children: [/*#__PURE__*/_jsxDEV(\"area\", {\n              onClick: () => this.filterTableData(\"Aghunaqa\"),\n              alt: \"Aghunaqa\",\n              title: \"Aghunaqa\",\n              coords: \"261,247,268,240,278,235,285,228,288,219,289,209,292,201,297,192,305,183,311,177,316,166,319,156,326,150,334,148,342,149,349,148,357,145,365,142,372,140,384,140,385,146,385,154,377,159,372,165,371,170,373,175,377,179,377,186,375,191,374,200,370,207,363,216,357,221,355,228,352,234,350,239,351,243,346,250,346,256,342,262,337,266,329,270,321,273,315,276,308,276,294,256,283,255,269,255\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Niuland\"),\n              alt: \"Niuland\",\n              title: \"Niuland\",\n              coords: \"246,258,250,252,255,248,261,248,265,252,274,256,285,255,294,256,300,266,307,274,312,276,320,273,330,271,337,267,346,261,354,261,360,266,362,272,375,274,382,276,391,277,392,282,390,289,394,292,398,295,404,304,410,300,418,299,425,301,433,299,441,298,446,304,446,310,445,314,439,318,437,322,428,323,422,327,423,330,414,330,408,336,402,340,402,344,393,335,388,337,381,337,374,337,368,333,356,331,350,330,343,330,342,315,334,310,334,300,331,297,324,296,318,297,310,293,305,298,300,302,293,306,286,311,276,312,268,310,258,310,249,308,241,297,244,290,245,279,256,282,266,281,266,275,259,274,262,266\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Kuhuboto\"),\n              alt: \"Kuhuboto\",\n              title: \"Kuhuboto\",\n              coords: \"250,309,259,311,266,309,274,311,281,313,290,309,295,305,302,301,310,295,318,297,332,297,335,311,343,318,342,324,344,330,338,338,334,343,330,349,321,350,310,351,303,352,297,356,299,364,305,366,313,368,318,370,322,372,322,382,319,383,313,379,305,377,296,375,289,376,282,382,279,393,271,394,263,393,265,377,252,373,249,364,256,354,257,345,254,335,252,324,252,318,250,312\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Chumukedima\"),\n              alt: \"Chumukedima\",\n              title: \"Chumukedima\",\n              coords: \"159,408,161,399,167,397,172,392,179,393,186,394,189,385,192,371,199,370,206,361,212,355,217,349,214,339,217,331,216,321,216,314,222,310,226,304,234,306,233,299,233,290,240,290,245,304,248,311,250,322,252,329,253,337,257,343,256,351,252,356,248,363,249,369,254,374,259,376,263,380,264,392,271,395,279,393,282,387,287,389,294,388,298,391,301,395,302,401,297,407,296,412,299,417,301,422,301,429,296,434,299,438,291,441,284,445,278,446,272,450,266,458,264,470,259,474,254,476,248,480,240,484,235,490,227,495,220,500,213,495,207,500,194,499,185,497,186,486,187,476,183,463,177,451,171,437,166,418\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Dimapur Sadar\"),\n              alt: \"Dimapur Sadar\",\n              title: \"Dimapur Sadar\",\n              coords: \"162,346,171,338,178,339,184,332,189,334,196,331,201,331,207,328,209,321,218,322,215,332,213,338,216,350,208,348,211,356,200,363,195,371,190,379,187,392,180,390\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Nihokhu\"),\n              alt: \"Nihokhu\",\n              title: \"Nihokhu\",\n              coords: \"281,385,286,379,293,377,299,377,306,378,315,382,321,384,320,372,309,368,297,364,296,357,304,352,317,351,330,350,335,339,344,329,358,333,367,333,371,338,382,338,392,336,399,344,403,349,408,354,419,354,420,361,423,365,419,370,413,376,406,379,397,384,388,393,378,401,367,409,356,416,342,420,337,425,323,429,314,433,297,437,302,425,295,412,300,405,302,396,295,388,287,389\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Dhansiripar\"),\n              alt: \"Dhansiripar\",\n              title: \"Dhansiripar\",\n              coords: \"159,409,165,419,168,428,171,438,174,447,180,458,183,467,187,478,185,487,184,495,187,499,194,500,206,502,208,508,205,515,203,522,205,531,209,535,213,539,220,552,213,550,206,549,200,546,195,539,190,533,180,538,175,542,164,540,158,542,153,530,148,534,140,528,137,520,132,516,128,523,118,529,107,527,101,528,95,531,85,536,82,530,76,524,71,517,71,508,62,504,48,505,42,496,47,488,55,486,55,484,62,478,65,471,66,468,76,471,80,461,88,465,91,459,95,453,106,454,106,448,109,439,115,438,114,430,120,425,125,418,138,413,149,413\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n              target: \"\",\n              onClick: () => this.filterTableData(\"Medziphema\"),\n              alt: \"Medziphema\",\n              title: \"Medziphema\",\n              coords: \"207,502,213,494,219,500,229,495,236,490,241,484,254,478,260,474,264,467,267,458,274,449,281,446,289,443,296,438,303,434,314,434,327,428,338,426,345,420,352,417,363,412,374,404,386,396,391,390,397,386,408,378,415,376,420,370,424,365,430,367,431,373,428,380,430,385,430,391,427,397,429,402,431,410,433,416,433,423,433,430,432,436,425,437,419,440,417,446,418,448,414,453,413,459,419,468,421,473,423,479,425,483,422,488,418,494,409,498,403,504,392,506,378,508,372,511,364,506,359,513,356,519,355,527,361,534,359,540,353,542,347,549,346,555,342,564,331,549,323,541,314,531,300,530,283,533,260,539,250,547,242,542,231,540,221,536,214,532,208,527,204,520\",\n              shape: \"poly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-child table\",\n          children: [this.state.circle && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" Selected Circle - \", this.state.circle, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n            tabIndexCell: true,\n            pagination: paginationFactory(options),\n            ref: n => this.node = n,\n            noDataIndication: \"Table is Empty. Please select a Circle from the map on the left.\",\n            striped: true,\n            hover: true,\n            condensed: true,\n            keyField: \"Id\",\n            data: this.state.tableData,\n            columns: this.columns,\n            selectRow: this.selectRow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this), this.state.villageIds.length > 0 && /*#__PURE__*/_jsxDEV(BootstrapTable, {\n            noDataIndication: \"Table is Empty. Please select villages from the table.\",\n            hover: true,\n            condensed: true,\n            keyField: \"Id\",\n            data: totalTableData,\n            columns: this.columnsTotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-btn\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => create(),\n              variant: \"primary\",\n              disabled: this.state.villageIds.length === 0,\n              children: \"Create Constituency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/vhaldiya/constituencyMaker/src/containers/Create/Create.js"],"names":["React","Component","BootstrapTable","paginationFactory","Button","axios","Create","constructor","props","isValidSelectionInclusion","row","arr","state","villageIds","usedCircles","Set","tmp","dbData","filter","ele","includes","forEach","add","size","isValidSelectionExclusion","index","indexOf","splice","returnNewIDs","id","newArr","handleOnSelect","isSelect","setState","prevState","totalVillages","totalPopulation","parseInt","totalAoPopulation","totalSemaPopulation","totalTenyPopulation","totalLothaPopulation","totalOthers","error","alert","filterTableData","cirle","sort","ele1","ele2","tableData","circle","node","paginationContext","currPage","columns","dataField","text","columnsTotal","selectRow","mode","clickToSelect","onSelect","hideSelectAll","nextPath","path","history","push","undefined","applicationError","totalCreated","componentDidMount","get","then","response","console","log","data","catch","preState","i","length","componentDidUpdate","render","options","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","updateAPI","url","patch","create","obj","selectedVillages","toString","post","loading","purchasing","totalTableData","Dimapur","n"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Dimapur from \"../../images/Dimapur.svg\";\n// import db from \"../../DataStore/db\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport './Create.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {Button} from \"react-bootstrap\";\nimport axios from \"../../axios-constituency\";\nclass Create extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            dbData: undefined,\n            tableData: [],\n            villageIds: [],\n            totalVillages: 0,\n            totalPopulation: 0,\n            totalAoPopulation: 0,\n            totalSemaPopulation: 0,\n            totalTenyPopulation: 0,\n            totalLothaPopulation: 0,\n            totalOthers: 0,\n            error: false,\n            circle: undefined,\n            applicationError: false,\n            totalCreated: 0\n        }\n    }\n\n    componentDidMount() {\n      axios.get('https://create-constituencies-default-rtdb.firebaseio.com/db.json').then(\n          response => {\n            console.log(response.data);\n              this.setState({\n                dbData: response.data\n              });\n          }\n      ).catch(error => { this.setState((preState) => ({\n        applicationError: true\n      })) });\n      axios.get('https://create-constituencies-default-rtdb.firebaseio.com/my.json').then(\n          response => {\n            let tmp = [];\n            for(var i in response.data){\n              tmp.push(response.data[i]);\n            }\n              this.setState({\n                totalCreated: tmp.length\n              });\n          }\n      ).catch(error => { this.setState((preState) => ({\n        applicationError: true\n      })) });\n  }\n\n  componentDidUpdate() {\n    // axios.get('https://create-constituencies-default-rtdb.firebaseio.com/db.json').then(\n    //       response => {\n    //         console.log(response.data);\n    //           this.setState({\n    //             dbData: response.data\n    //           });\n    //       }\n    //   ).catch(error => { this.setState((preState) => ({\n    //     applicationError: true\n    //   })) });\n  }\n\n    isValidSelectionInclusion = (row) => {\n      let arr = [...this.state.villageIds, row[\"Id\"]];\n      let usedCircles =  new Set();\n      let tmp = this.state.dbData.filter((ele)=> {\n        return arr.includes(ele[\"Id\"]);\n      });\n      tmp.forEach(ele => usedCircles.add(ele[\"Circle\"]));\n      return usedCircles.size <= 3;\n    }\n\n    isValidSelectionExclusion = (row) => {\n      let arr = [...this.state.villageIds];\n      const index = arr.indexOf(row[\"Id\"]);\n      if (index > -1) {\n        arr.splice(index, 1);\n      }\n      let usedCircles =  new Set();\n      let tmp = this.state.dbData.filter((ele)=> {\n        return arr.includes(ele[\"Id\"]);\n      });\n      tmp.forEach(ele => usedCircles.add(ele[\"Circle\"]));\n      return usedCircles.size <= 3;\n    }\n\n    returnNewIDs = (arr, id) => {\n      let newArr = [...arr];\n      const index = newArr.indexOf(id);\n      if (index > -1) {\n        newArr.splice(index, 1);\n      }\n      return newArr;\n    }\n\n    handleOnSelect = (row, isSelect) => {\n      // console.log(row, isSelect);\n      if (isSelect) {\n        if(this.isValidSelectionInclusion(row)){\n          this.setState((prevState) => ({\n            villageIds: [...prevState.villageIds, row[\"Id\"]],\n            totalVillages: prevState.totalVillages + 1,\n            totalPopulation: prevState.totalPopulation + parseInt(row[\"Total population\"]),\n            totalAoPopulation: prevState.totalAoPopulation + parseInt(row[\"Ao population\"]),\n            totalSemaPopulation: prevState.totalSemaPopulation + parseInt(row[\"Sema population\"]),\n            totalTenyPopulation: prevState.totalTenyPopulation + parseInt(row[\"Teny Population\"]),\n            totalLothaPopulation: prevState.totalLothaPopulation + parseInt(row[\"Lotha Population\"]),\n            totalOthers: prevState.totalOthers + parseInt(row[\"Others\"])\n          }));\n        }\n        else {\n          this.setState((prevState) => ({\n            error: true\n          }));\n          alert(\"You cannot select villages from more than 3 Circles for a Constituency!!\");\n          return false;\n        }\n        \n      } else {\n        this.setState((prevState) => ({\n            villageIds: this.returnNewIDs(prevState.villageIds, row[\"Id\"]),\n            totalVillages: prevState.totalVillages - 1,\n            totalPopulation: prevState.totalPopulation - parseInt(row[\"Total population\"]),\n            totalAoPopulation: prevState.totalAoPopulation - parseInt(row[\"Ao population\"]),\n            totalSemaPopulation: prevState.totalSemaPopulation - parseInt(row[\"Sema population\"]),\n            totalTenyPopulation: prevState.totalTenyPopulation - parseInt(row[\"Teny Population\"]),\n            totalLothaPopulation: prevState.totalLothaPopulation - parseInt(row[\"Lotha Population\"]),\n            totalOthers: prevState.totalOthers - parseInt(row[\"Others\"])\n        }));\n        if(this.isValidSelectionExclusion(row)){\n          this.setState((prevState) => ({\n            error: false\n          }));\n        }\n      }\n    }\n\n    filterTableData = (cirle) => {\n      if(this.state.dbData){\n        const arr  = this.state.dbData.filter((ele) => {\n            return ele[\"Circle\"] === cirle && ele[\"isSelected\"] === \"FALSE\";\n        });\n        arr.sort((ele1, ele2) => {\n          return ele1[\"Location name\"] > ele2[\"Location name\"] ? 1 : ele1[\"Location name\"] < ele2[\"Location name\"] ? -1 : 0;\n        });\n        // console.log(arr);\n        this.setState({tableData: [...arr], circle: cirle});\n      }\n        this.node.paginationContext.currPage = 1;\n        \n    }\n    // CaptionEle = () => <h3 style={{ borderRadius: '0.25em', textAlign: 'center', color: 'purple', border: '1px solid purple', padding: '0.5em' }}>{this.state.captionElement}</h3>;\n\n    columns = [{\n        dataField: 'Location name',\n        text: 'Village Name',\n      }, {\n        dataField: 'Total population',\n        text: 'Total Population',\n      }, {\n        dataField: 'Ao population',\n        text: 'Ao Population',\n      },\n      {\n        dataField: 'Sema population',\n        text: 'Sema Population',\n      },\n      {\n        dataField: 'Teny Population',\n        text: 'Teny Population',\n      },\n      {\n        dataField: 'Lotha Population',\n        text: 'Lotha Population',\n      },\n      {\n        dataField: 'Others',\n        text: 'Other Population',\n      }];\n\n    columnsTotal = [{\n        dataField: 'Total Villages',\n        text: 'Total Villages',\n      }, {\n        dataField: 'Total Population',\n        text: 'Total Population',\n      }, {\n        dataField: 'Total Ao population',\n        text: 'Total Ao Population',\n      },\n      {\n        dataField: 'Total Sema population',\n        text: 'Total Sema Population',\n      },\n      {\n        dataField: 'Total Teny Population',\n        text: 'Total Teny Population',\n      },\n      {\n        dataField: 'Total Lotha Population',\n        text: 'Total Lotha Population',\n      },\n      {\n        dataField: 'Total Others',\n        text: 'Total Other Population',\n      }];\n\n    selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        onSelect: this.handleOnSelect,\n        hideSelectAll: true\n      };\n\n      nextPath = (path) => {\n        this.props.history.push(path);\n      }\n\n    render() {\n      const options = {\n        sizePerPage: 7,\n        hideSizePerPage: true,\n        hidePageListOnlyOnePage: true\n      };\n\n      async function updateAPI(url) {\n        const response = await axios.patch(url, {\"isSelected\": \"TRUE\"});\n        console.log(response)\n        console.log(response.data)\n      }\n      const create = () => {\n        let obj = {};\n        obj[\"Id\"] = this.state.totalCreated + 1;\n        obj[\"Total Villages\"] = this.state.totalVillages;\n        obj[\"Total Population\"] = this.state.totalPopulation;\n        obj[\"Total Ao Population\"] = this.state.totalAoPopulation;\n        obj[\"Total Sema Population\"] = this.state.totalSemaPopulation;\n        obj[\"Total Teny Population\"] = this.state.totalTenyPopulation;\n        obj[\"Total Lotha Population\"] = this.state.totalLothaPopulation;\n        obj[\"Total Others\"] = this.state.totalOthers;\n        obj[\"Villages Selected\"] = this.state.villageIds;\n        // my.push(obj);\n        let selectedVillages = [...this.state.villageIds];\n        this.state.dbData.forEach((ele) => {\n          if(selectedVillages.includes(ele[\"Id\"])){\n            var id = parseInt(ele[\"Id\"])-1\n            var url = \"https://create-constituencies-default-rtdb.firebaseio.com/db/\" + id.toString() + \".json/\";\n            updateAPI(url);\n          }\n        });\n\n        axios.post('/my.json', obj).then(response => {\n            console.log(\"Created Successfully\");\n            this.nextPath('/home');\n        }).catch(error => {\n            //console.log(error);\n            this.setState({ loading: false, purchasing: false });\n        });\n      }\n\n      const totalTableData = [\n        {\n          \"Total Villages\": this.state.totalVillages,\n          \"Total Population\": this.state.totalPopulation,\n          \"Total Ao population\": this.state.totalAoPopulation,\n          \"Total Sema population\": this.state.totalSemaPopulation,\n          \"Total Teny Population\": this.state.totalTenyPopulation,\n          \"Total Lotha Population\": this.state.totalLothaPopulation,\n          \"Total Others\": this.state.totalOthers\n        }\n      ];\n\n        return (\n          <>\n            <div className = \"float-container\">\n              <div className = \"float-child map\">\n                <img alt=\"Dimapur-img\" src={Dimapur} useMap=\"#image-map\"/>\n                <map name=\"image-map\">\n                    <area onClick={()=>this.filterTableData(\"Aghunaqa\")} alt=\"Aghunaqa\" title=\"Aghunaqa\"  coords=\"261,247,268,240,278,235,285,228,288,219,289,209,292,201,297,192,305,183,311,177,316,166,319,156,326,150,334,148,342,149,349,148,357,145,365,142,372,140,384,140,385,146,385,154,377,159,372,165,371,170,373,175,377,179,377,186,375,191,374,200,370,207,363,216,357,221,355,228,352,234,350,239,351,243,346,250,346,256,342,262,337,266,329,270,321,273,315,276,308,276,294,256,283,255,269,255\" shape=\"poly\"/>\n                    <area target=\"\" onClick={()=>this.filterTableData(\"Niuland\")} alt=\"Niuland\" title=\"Niuland\" coords=\"246,258,250,252,255,248,261,248,265,252,274,256,285,255,294,256,300,266,307,274,312,276,320,273,330,271,337,267,346,261,354,261,360,266,362,272,375,274,382,276,391,277,392,282,390,289,394,292,398,295,404,304,410,300,418,299,425,301,433,299,441,298,446,304,446,310,445,314,439,318,437,322,428,323,422,327,423,330,414,330,408,336,402,340,402,344,393,335,388,337,381,337,374,337,368,333,356,331,350,330,343,330,342,315,334,310,334,300,331,297,324,296,318,297,310,293,305,298,300,302,293,306,286,311,276,312,268,310,258,310,249,308,241,297,244,290,245,279,256,282,266,281,266,275,259,274,262,266\" shape=\"poly\"/>\n                    <area target=\"\" onClick={()=>this.filterTableData(\"Kuhuboto\")}  alt=\"Kuhuboto\" title=\"Kuhuboto\" coords=\"250,309,259,311,266,309,274,311,281,313,290,309,295,305,302,301,310,295,318,297,332,297,335,311,343,318,342,324,344,330,338,338,334,343,330,349,321,350,310,351,303,352,297,356,299,364,305,366,313,368,318,370,322,372,322,382,319,383,313,379,305,377,296,375,289,376,282,382,279,393,271,394,263,393,265,377,252,373,249,364,256,354,257,345,254,335,252,324,252,318,250,312\" shape=\"poly\"/>\n                    <area target=\"\" onClick={()=>this.filterTableData(\"Chumukedima\")} alt=\"Chumukedima\" title=\"Chumukedima\" coords=\"159,408,161,399,167,397,172,392,179,393,186,394,189,385,192,371,199,370,206,361,212,355,217,349,214,339,217,331,216,321,216,314,222,310,226,304,234,306,233,299,233,290,240,290,245,304,248,311,250,322,252,329,253,337,257,343,256,351,252,356,248,363,249,369,254,374,259,376,263,380,264,392,271,395,279,393,282,387,287,389,294,388,298,391,301,395,302,401,297,407,296,412,299,417,301,422,301,429,296,434,299,438,291,441,284,445,278,446,272,450,266,458,264,470,259,474,254,476,248,480,240,484,235,490,227,495,220,500,213,495,207,500,194,499,185,497,186,486,187,476,183,463,177,451,171,437,166,418\" shape=\"poly\"/>\n                    <area  target=\"\" onClick={()=>this.filterTableData(\"Dimapur Sadar\")} alt=\"Dimapur Sadar\" title=\"Dimapur Sadar\" coords=\"162,346,171,338,178,339,184,332,189,334,196,331,201,331,207,328,209,321,218,322,215,332,213,338,216,350,208,348,211,356,200,363,195,371,190,379,187,392,180,390\" shape=\"poly\"/>\n                    <area  target=\"\" onClick={()=>this.filterTableData(\"Nihokhu\")} alt=\"Nihokhu\" title=\"Nihokhu\" coords=\"281,385,286,379,293,377,299,377,306,378,315,382,321,384,320,372,309,368,297,364,296,357,304,352,317,351,330,350,335,339,344,329,358,333,367,333,371,338,382,338,392,336,399,344,403,349,408,354,419,354,420,361,423,365,419,370,413,376,406,379,397,384,388,393,378,401,367,409,356,416,342,420,337,425,323,429,314,433,297,437,302,425,295,412,300,405,302,396,295,388,287,389\" shape=\"poly\"/>\n                    <area target=\"\" onClick={()=>this.filterTableData(\"Dhansiripar\")} alt=\"Dhansiripar\" title=\"Dhansiripar\" coords=\"159,409,165,419,168,428,171,438,174,447,180,458,183,467,187,478,185,487,184,495,187,499,194,500,206,502,208,508,205,515,203,522,205,531,209,535,213,539,220,552,213,550,206,549,200,546,195,539,190,533,180,538,175,542,164,540,158,542,153,530,148,534,140,528,137,520,132,516,128,523,118,529,107,527,101,528,95,531,85,536,82,530,76,524,71,517,71,508,62,504,48,505,42,496,47,488,55,486,55,484,62,478,65,471,66,468,76,471,80,461,88,465,91,459,95,453,106,454,106,448,109,439,115,438,114,430,120,425,125,418,138,413,149,413\" shape=\"poly\"/>\n                    <area  target=\"\" onClick={()=>this.filterTableData(\"Medziphema\")} alt=\"Medziphema\" title=\"Medziphema\" coords=\"207,502,213,494,219,500,229,495,236,490,241,484,254,478,260,474,264,467,267,458,274,449,281,446,289,443,296,438,303,434,314,434,327,428,338,426,345,420,352,417,363,412,374,404,386,396,391,390,397,386,408,378,415,376,420,370,424,365,430,367,431,373,428,380,430,385,430,391,427,397,429,402,431,410,433,416,433,423,433,430,432,436,425,437,419,440,417,446,418,448,414,453,413,459,419,468,421,473,423,479,425,483,422,488,418,494,409,498,403,504,392,506,378,508,372,511,364,506,359,513,356,519,355,527,361,534,359,540,353,542,347,549,346,555,342,564,331,549,323,541,314,531,300,530,283,533,260,539,250,547,242,542,231,540,221,536,214,532,208,527,204,520\" shape=\"poly\"/>\n                </map>\n                </div>\n                <div className = \"float-child table\">\n                  {\n                    this.state.circle && <h3> Selected Circle - {this.state.circle} </h3>\n                  }\n                  <BootstrapTable\n                  tabIndexCell\n                      pagination={ paginationFactory(options) }\n                      ref={(n) => (this.node = n)}\n                      noDataIndication=\"Table is Empty. Please select a Circle from the map on the left.\"\n                      striped\n                      hover\n                      condensed\n                      keyField='Id'\n                      data={ this.state.tableData }\n                      columns={ this.columns }\n                      selectRow={ this.selectRow }\n                  />\n                  { this.state.villageIds.length > 0 && \n                  <BootstrapTable\n                      noDataIndication=\"Table is Empty. Please select villages from the table.\"\n                      hover\n                      condensed\n                      keyField='Id'\n                      data={ totalTableData }\n                      columns={ this.columnsTotal }\n                  />\n                  }\n                  <div className=\"actions-btn\">\n                    <Button  onClick={()=> create()} variant=\"primary\" disabled={this.state.villageIds.length === 0}>Create Constituency</Button>\n                  </div>\n                </div>\n            </div>\n            {/* {\n                  this.state.error && <AlertNotification show={true}/>\n            } */}\n          </>\n        );\n    }\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}